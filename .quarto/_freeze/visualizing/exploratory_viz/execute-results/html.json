{
  "hash": "319f73895e198810a62de19a3abad033",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Exploratory data visualization\nengine: knitr\nformat: live-html\nwebr:\n  packages:\n    - readr\n    - dplyr\n    - lubridate\n    - tidyr\n    - ggplot2\n    - stringr\n    - janitor\n    - readxl\n    - gradethis\n    - DT\n    - knitr\n    - gradethis\n    - readxl\n    - DT\n    - janitor\nresources:\n  - images\n  - data\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| output: false\nwebr::install(\"gradethis\", quiet = TRUE)\nlibrary(gradethis)\noptions(webr.exercise.checker = function(\n  label, user_code, solution_code, check_code, envir_result, evaluate_result,\n  envir_prep, last_value, engine, stage, ...\n) {\n  if (is.null(check_code)) {\n    # No grading code, so just skip grading\n    invisible(NULL)\n  } else if (is.null(label)) {\n    list(\n      correct = FALSE,\n      type = \"warning\",\n      message = \"All exercises must have a label.\"\n    )\n  } else if (is.null(solution_code)) {\n    list(\n      correct = FALSE,\n      type = \"warning\",\n      message = htmltools::tags$div(\n        htmltools::tags$p(\"A problem occurred grading this exercise.\"),\n        htmltools::tags$p(\n          \"No solution code was found. Note that grading exercises using the \",\n          htmltools::tags$code(\"gradethis\"),\n          \"package requires a model solution to be included in the document.\"\n        )\n      )\n    )\n  } else {\n    gradethis::gradethis_exercise_checker(\n      label = label, solution_code = solution_code, user_code = user_code,\n      check_code = check_code, envir_result = envir_result,\n      evaluate_result = evaluate_result, envir_prep = envir_prep,\n      last_value = last_value, stage = stage, engine = engine)\n  }\n})\n```\n:::\n\n::: {.cell}\n```{webr}\n#| include: false\n\n\nsd <- read_csv(\"data/san_diego.csv\")\n\nsd <- clean_names(sd)\n\n\nsd_adjusted <- sd |> \n  mutate(death_date=mdy(death_date)) |> \n  mutate(month=month(death_date, label=TRUE, abbr=TRUE)) \n\nsd_month <- sd_adjusted |> \n  count(year, month, manner_of_death, name=\"deaths\") |> \n  mutate(date=mdy(paste0(month, \" 1, \", year)))\n\nscented <- read_excel(\"data/Scented_all.xlsx\", sheet=1)\nunscented <- read_excel(\"data/Unscented_all.xlsx\", sheet=1)\n\nscented <- scented |> \n  mutate(type=\"scented\")\n  \nunscented <- unscented |> \n  mutate(type=\"unscented\")\n\nscented <- bind_rows(scented, unscented)\n\nscented_summary <- scented |>\n  arrange(Date) |>\n  filter(Date >= \"2017-01-01\") |>\n  mutate(Date=ymd(Date)) |> \n  filter(CandleID <= 3) |>\n  group_by(Date, type) |>\n  summarise(Average_Rating=mean(Rating),\n            Reviews=n())\n  \nsd_year <- sd_adjusted |> \n  # if we're going to compare this year to previous years, we need to exclude data we don't have yet\n  filter(!month %in% c(\"Oct\", \"Nov\", \"Dec\")) |> \n  count(year, manner_of_death, name=\"deaths\") \n\nsd_group <- sd_adjusted |> \n  filter(!month %in% c(\"Oct\", \"Nov\", \"Dec\")) |> \n  count(year, month, manner_of_death, name=\"deaths\") |> \n  mutate(year_type=case_when(\n    year==2020 ~ \"2020\",\n    TRUE ~ \"1997-2019\"\n  )) |> \n  group_by(month, manner_of_death, year_type) |> \n  summarize(avg_deaths=mean(deaths, na.rm=T)) |> \n  filter(!is.na(month))\n\nsd_group_compare <- sd_adjusted |> \n  filter(!month %in% c(\"Sep\", \"Oct\", \"Nov\", \"Dec\")) |> \n  count(year, manner_of_death, name=\"deaths\") |> \n  mutate(year_type=case_when(\n    year==2020 ~ \"2020\",\n    TRUE ~ \"1997-2019\"\n  )) |> \n  group_by(manner_of_death, year_type) |> \n  summarize(avg_deaths=round(mean(deaths, na.rm=T)))\n```\n:::\n\n::: {.cell edit='false' define='ok_reponse'}\n```{webr}\n#| edit: false\n#| output: false\n#| define:\n#|   - ok_reponse\nlibrary(htmltools)\nok_reponse <- function(reponse, n) {\n  if (is.na(reponse)) HTML(\"\")\n  else if (reponse == n) div(HTML(\"Correct ✓\"), style = \"color: green\")\n  else div(HTML(\"Incorrect ✗\"), style = \"color: red\")\n}\n```\n:::\n\n\n\n\n\n## Putting it all together\n\nUsually we'd next go over all the different `geom_` visualizations you can create using a single data set.\n\n* [A ggplot2 tutorial for beautiful plotting in R](https://cedricscherer.netlify.app/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/)\n\nBut we're going to use more real-life data that I think will be relevant to your journalism.\n\nThe data set is raw deaths data from San Diego. It's a combination of 1997-2019 data from San Diego's [data portal](https://data.sandiegocounty.gov/Safety/Medical-Examiner-Cases/jkvb-n4p7/data) and 2020 data from a public information request on [MuckRock](https://www.muckrock.com/foi/santa-clara-county-732/santa-clara-county-medical-examiner-coroner-case-details-104835/).\n\nDownloads this data [san_diego.csv](https://github.com/utdata/chj-r-introduction/raw/main/chj-day4/san_diego.csv) and place it in your project folder.\n\nMake sure you've got the proper libraries loaded.\n\n\n### Ready for the code?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(lubridate)\n\nsd <- read_csv(\"data/san_diego.csv\")\n\nsd <- clean_names(sd)\n\nsd_adjusted <- sd |> \n  mutate(death_date=mdy(death_date)) |> \n  mutate(month=month(death_date, label=TRUE, abbr=TRUE)) \n```\n:::\n\n::: {.cell}\n```{webr}\nsd_adjusted\n```\n:::\n\n\n\n\nAlright, I've cleaned it up for you.\n\nThere's some really great data here. It's got gender, race, and several levels of manner of death stretching back to 1997 and through possibly October of 2020.\n\nLet's start summarizing the data so we can start looking for trends.\n\n### Exercise 7\n\nCan you `count` up the number of `deaths` by manner_of_death by month and year, please?\n\n\n\n\n::: {.cell exercise='sd_month1'}\n```{webr}\n#| exercise: sd_month1\nsd_month <- sd_adjusted |> \n  _____(year, month, manner_of_death, name=\"______\") |> \n  # we'll also add a new date column in the proper format for good charting\n  mutate(date=mdy(paste0(month, \" 1, \", year)))\n\n\nsd_month\n```\n:::\n\n::: {.cell exercise='sd_month1' solution='true'}\n```{webr}\n#| exercise: sd_month1\n#| solution: true\nsd_month <- sd_adjusted |> \n  count(year, month, manner_of_death, name=\"deaths\") |> \n  mutate(date=mdy(paste0(month, \" 1, \", year)))\n\nsd_month\n```\n:::\n\n::: {.cell exercise='sd_month1' check='true'}\n```{webr}\n#| exercise: sd_month1\n#| check: true\ngradethis::grade_this_code()\n```\n:::\n\n\n\n\n<div id=\"sd_month1-hint\">\n**Hint:** count / deaths\n</div>\n\n### Exercise 8\n\nNow, fill in the blank below to create a line chart for each type of death\n\n\n\n\n::: {.cell exercise='sd_month_viz'}\n```{webr}\n#| exercise: sd_month_viz\n#| fig.width: 8\nsd_month |> \n  ggplot(aes(x=date, y=deaths, color=manner_of_death, group=manner_of_death)) +\n  geom_____() +\n  labs(title=\"Monthly deaths in San Diego\",\n       caption=\"Source; San Diego Medical Examiner\")\n```\n:::\n\n::: {.cell exercise='sd_month_viz' solution='true'}\n```{webr}\n#| exercise: sd_month_viz\n#| solution: true\nsd_month |> \n  ggplot(aes(x=date, y=deaths, color=manner_of_death, group=manner_of_death)) +\n  geom_line() +\n  labs(title=\"Monthly deaths in San Diego\",\n       caption=\"Source; San Diego Medical Examiner\")\n```\n:::\n\n::: {.cell exercise='sd_month_viz' check='true'}\n```{webr}\n#| exercise: sd_month_viz\n#| check: true\ngradethis::grade_this_code()\n```\n:::\n\n\n\n\nAlright, a little messy. We can see some overall growing trend in one category, but that's it. \n\nPerhaps looking at the data by month is too granular. Let's step back and aggregate by year.\n\n### By year\n\nI went ahead and created a new `sd_year` dataframe counting up the deaths by year (while excluding October, November, and December) so we can compare prior years to this year.\n\n\n\n\n::: {.cell}\n```{webr}\nsd_year <- sd_adjusted |> \n  # if we're going to compare this year to previous years, we need to exclude data we don't have yet\n  filter(!month %in% c(\"Oct\", \"Nov\", \"Dec\")) |> \n  count(year, manner_of_death, name=\"deaths\") \n\ndatatable(sd_year)\n```\n:::\n\n\n\n\n### Exercise 9\n\nOkay, your turn to make a chart.\n\nMake me a faceted chart that breaks out all the individual **manner_of_death** into its own chart, small-multiple style.\n\n\n\n\n::: {.cell exercise='sd_year_chart'}\n```{webr}\n#| exercise: sd_year_chart\n#| fig.width: 8\nsd_year |> ggplot(aes(x=year, y=deaths)) +\n  geom_col() +\n  ______wrap(vars(_______________), ncol=4)\n```\n:::\n\n::: {.cell exercise='sd_year_chart' solution='true'}\n```{webr}\n#| exercise: sd_year_chart\n#| solution: true\nsd_year |> ggplot(aes(x=year, y=deaths)) +\n  geom_col() +\n  facet_wrap(vars(manner_of_deaths), ncol=4)\n```\n:::\n\n::: {.cell exercise='sd_year_chart' check='true'}\n```{webr}\n#| exercise: sd_year_chart\n#| check: true\ngrade_code()\n```\n:::\n\n\n\n\n\nAlright, now we're getting somewhere. \n\nLooks like accidents have been trending up year over year.\n\nIf we focus on 2020, it looks like Natural causes have increased. But it also increased in 2019.\n\nSuicides actually look down this year compared to prior years.\n\nHm...\n\nWhat else can we do? \n\nWe can try to measure **Excess Deaths**\n\nAverage each month by every year prior to 2020 and compare it to 2020's trend line.\n\nI'll give you the code again.\n\nWe're going to use a function called `case_when` to create a new column called **year_type**. If the year is 2020, then it will be \"2020\" otherwise it will be \"1997-2020\". And then we find the average number of deaths for each month for those two groups.\n\n\n\n\n::: {.cell}\n```{webr}\n#| warning: false\n#| message: false\nsd_group <- sd_adjusted |> \n  filter(!month %in% c(\"Oct\", \"Nov\", \"Dec\")) |> \n  count(year, month, manner_of_death, name=\"deaths\") |> \n  mutate(year_type=case_when(\n    year==2020 ~ \"2020\",\n    TRUE ~ \"1997-2019\"\n  )) |> \n  group_by(month, manner_of_death, year_type) |> \n  summarize(avg_deaths=mean(deaths, na.rm=T)) |> \n  filter(!is.na(month))\n\ndatatable(sd_group)\n```\n:::\n\n\n\n\nLooking very smooth.\n\nLet's chart it.\n\n### Exercise 10\n\nCan you please create a faceted line chart of the data above? But with year_type as two different lines?\n\nFill in the three blanks to generate the chart.\n\n\n\n\n::: {.cell exercise='sd_group_viz'}\n```{webr}\n#| exercise: sd_group_viz\n#| fig.width: 8\n#| fig.height: 5\nggplot(sd_group, aes(x=_____, y=__________, color=year_type, group=year_type)) +\n  geom_____() +\n  facet_wrap(vars(manner_of_death), scales=\"free_y\", ncol=2)\n```\n:::\n\n::: {.cell exercise='sd_group_viz' solution='true'}\n```{webr}\n#| exercise: sd_group_viz\n#| solution: true\nggplot(sd_group, aes(x=month, y=avg_deaths, color=year_type, group=year_type)) +\n  geom_line() +\n  facet_wrap(vars(manner_of_death), scales=\"free_y\", ncol=2)\n```\n:::\n\n\n\n\nGreat.\n\nNow there's some interesting trend in July and August, right?\n\nAnd it shows that maybe the last month of data is so low. It's possible that the data for the month is incomplete and should be excluded from analysis.\n\n**How about we come up with a number for the nutgraf of a story?**\n\nHow many more accidental cause deaths are there in 2020 compared to the historical average?\n\n*Exclude September since it seems so off*\n\nHere's a look at the dataframe you can estimate this with.\n\n\n\n\n::: {.cell}\n```{webr}\ndatatable(sd_group)\n```\n:::\n\n\n\n\nWhat code do you put below to fill out this sentence:\n\n\"There were X% more accidental deaths in 2020 so far than the historical average in San Diego\"\n\n*hint: you'll need filter(), pivot_wider(), group_by(), summarize(), mutate(), and math*\n\n\n\n\n::: {.cell exercise='excess_deaths'}\n```{webr}\n#| exercise: excess_deaths\nsd_group |> \n  \n```\n:::\n\n\n\n\nGood job!\n\n### Further exploratory visual analysis\n\nAlright, comparing 2020 to the average from previous years seems to be a good decision.\n\nSome interesting trends that we could actually write about are surfacing.\n\nLet's compare that overall instead of by month.\n\nHere's the code. We're also excluding September based on what we discovered in the chart above.\n\n\n\n\n::: {.cell}\n```{webr}\nsd_group_compare <- sd_adjusted |> \n  filter(!month %in% c(\"Sep\", \"Oct\", \"Nov\", \"Dec\")) |> \n  count(year, manner_of_death, name=\"deaths\") |> \n  mutate(year_type=case_when(\n    year==2020 ~ \"2020\",\n    TRUE ~ \"1997-2019\"\n  )) |> \n  group_by(manner_of_death, year_type) |> \n  summarize(avg_deaths=round(mean(deaths, na.rm=T)))\n\ndatatable(sd_group_compare)\n```\n:::\n\n\n\n\n\n### Exercise 11\n\nRun the code below with `manner_of_death` as x and `avg_deaths` as y.\n\nThen swap them.\n\nWhich do you prefer and why?\n\n\n\n\n::: {.cell exercise='sd_group_compare'}\n```{webr}\n#| exercise: sd_group_compare\nggplot(sd_group_compare, aes(x=________, y=______, fill=year_type)) +\n  geom_bar(position=\"dodge\", stat=\"identity\") \n```\n:::\n\n::: {.cell exercise='sd_group_compare' solution='true'}\n```{webr}\n#| exercise: sd_group_compare\n#| solution: true\nggplot(sd_group_compare, aes(x=manner_of_death, y=avg_deaths, fill=year_type)) +\n  geom_bar(position=\"dodge\", stat=\"identity\") \n```\n:::\n\n::: {.cell exercise='sd_group_compare' check='true'}\n```{webr}\n#| exercise: sd_group_compare\n#| check: true\ngradethis::grade_this_code()\n```\n:::\n\n\n\n\n\nAlright, before we go, I want to clean things up some.\n\nI want to get rid of the manners of death that have barely any and I want to reorder the labels so that it's in alphabetical order.\n\n### Exercise 12\n\nTake a look at the code below. Absorb it.\n\nThen generate the code and see what pops up.\n\n\n\n\n::: {.cell exercise='sd_group_compare_chart_new'}\n```{webr}\n#| exercise: sd_group_compare_chart_new\nsd_group_compare |> \n  filter(!manner_of_death %in% c(\"Other\", \"Family Paid Autopsy\")) |> \n  filter(!is.na(manner_of_death)) |> \n  ggplot(aes(x=avg_deaths, y=forcats::fct_rev(manner_of_death),  fill=year_type)) +\n  geom_bar(position=\"dodge\", stat=\"identity\") +\n  labs(title=\"Manner of death in San Diego\",\n       subtitle=\"January and August deaths in 2020 compared to average deaths between 1997 and 2019\",\n       caption=\"Source: San Diego Medical Examiner\",\n       y=\"Manner of death\",\n       x=\"Average deaths\",\n       fill=\"Year\") +\n  theme_minimal()\n\n```\n:::\n\n\n\n\n### Story\n\nSo, what do you think the story is?\n\nIn San Diego, accidents are way up, suicides are slightly up, and meanwhile homicides are down.\n\nWhat can we do next?\n\nWell, dig into the accidents, perhaps, and see if there's any explanation for the huge increase.\n\nAlright, congratulations on going on this exploratory data visualization journey.\n\nSome of the answers won't appear right away unless you poke around and look at the data in as many ways as possible.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}